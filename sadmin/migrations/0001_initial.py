# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-10-09 11:42
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
        ('university', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applytype', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'applytype',
            },
        ),
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'classtype',
            },
        ),
        migrations.CreateModel(
            name='Consultancy',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('consultancyname', models.CharField(db_column='consultancyName', max_length=30)),
                ('pan_vat', models.CharField(max_length=20)),
                ('reg_no', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=20)),
                ('website', models.CharField(max_length=50)),
                ('phone', models.IntegerField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'consultancy',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Counselor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mobile', models.IntegerField()),
                ('address', models.CharField(max_length=20)),
                ('counselor_consultancy', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='counselor_counsultancy', to='sadmin.Consultancy')),
            ],
            options={
                'db_table': 'counselor_profile',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countryname', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Deliveryman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'deliveryman',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('districtname', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='DocumentFor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documentforname', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'document_for',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('documentfor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sadmin.DocumentFor')),
            ],
            options={
                'db_table': 'document_type',
            },
        ),
        migrations.CreateModel(
            name='ModeratorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mobile', models.IntegerField()),
                ('address', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'moderator_profile',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField()),
                ('created', models.DateTimeField()),
                ('map_url', models.TextField(blank=True, null=True)),
                ('web_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=400)),
            ],
            options={
                'db_table': 'notification_type',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('discountpercent', models.IntegerField(blank=True, null=True)),
                ('scholarshippercent', models.IntegerField(blank=True, null=True)),
                ('validity', models.DateField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'offer',
            },
        ),
        migrations.CreateModel(
            name='OfferedClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('price', models.IntegerField()),
                ('discountpercent', models.IntegerField()),
                ('location', models.CharField(max_length=100)),
                ('starttime', models.TimeField()),
                ('endtime', models.TimeField()),
                ('created', models.DateTimeField()),
                ('classtype', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.ClassType')),
            ],
            options={
                'db_table': 'offered_class',
            },
        ),
        migrations.CreateModel(
            name='OfferType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'offer_type',
            },
        ),
        migrations.CreateModel(
            name='Pickup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_date', models.DateField()),
                ('time', models.TimeField()),
                ('location', models.CharField(max_length=50)),
                ('is_pending', models.IntegerField()),
                ('created_date', models.DateField()),
                ('document_for', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.DocumentType')),
            ],
            options={
                'db_table': 'pickup',
            },
        ),
        migrations.CreateModel(
            name='PickupDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'pickup_detail',
            },
        ),
        migrations.CreateModel(
            name='RegisteredClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offeredclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sadmin.OfferedClass')),
            ],
            options={
                'db_table': 'registered_class',
            },
        ),
        migrations.CreateModel(
            name='RegisteredOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sadmin.Offer')),
            ],
            options={
                'db_table': 'registered_offer',
            },
        ),
        migrations.CreateModel(
            name='Scheduledpickup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deliverydate', models.DateField()),
                ('deliverytime', models.TimeField()),
                ('is_picked', models.IntegerField(blank=True, null=True)),
                ('deliveryman', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.Deliveryman')),
                ('pickup', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.Pickup')),
            ],
            options={
                'db_table': 'scheduled_pickup',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('dob', models.DateField()),
                ('mobile', models.IntegerField()),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('scholarship', models.IntegerField()),
                ('citizenship', models.CharField(max_length=15)),
                ('passport', models.CharField(blank=True, max_length=15, null=True)),
                ('isblocked', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='self_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('applied_country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.Country')),
                ('apply_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.ApplyType')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.District')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='university.ProgramsOffered')),
                ('student_consultancy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='consultancy_student', to='sadmin.Consultancy')),
                ('sub_major', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='university.SubMajor')),
            ],
            options={
                'db_table': 'user_profile',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('qualification', models.TextField()),
            ],
            options={
                'db_table': 'tutor',
            },
        ),
        migrations.CreateModel(
            name='UploadedDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docname', models.CharField(max_length=30)),
                ('url', models.TextField()),
                ('doctype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sadmin.DocumentType')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'uploaded_document',
            },
        ),
        migrations.AddField(
            model_name='registeredoffer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registeredclass',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pickupdetail',
            name='documentid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.UploadedDocument'),
        ),
        migrations.AddField(
            model_name='pickupdetail',
            name='pickupid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.Pickup'),
        ),
        migrations.AddField(
            model_name='pickup',
            name='pickup_of',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='offeredclass',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.Tutor'),
        ),
        migrations.AddField(
            model_name='offer',
            name='offerinclass',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.OfferedClass'),
        ),
        migrations.AddField(
            model_name='offer',
            name='offertype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.OfferType'),
        ),
        migrations.AddField(
            model_name='offer',
            name='university',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='university.University'),
        ),
        migrations.AddField(
            model_name='notification',
            name='receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pk_not_receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pk_not_sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sadmin.NotificationType'),
        ),
        migrations.AddField(
            model_name='counselor',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counselor_user_profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
